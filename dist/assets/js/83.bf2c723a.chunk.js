(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{518:function(n,e,o){"use strict";o.r(e),e.default="camera.far = 5;\nstage.rotationX = 25;\ndirectionLight.shadow = {};\nvar glTFLoader = new Hilo3d.GLTFLoader();\nglTFLoader.load({\n    src: 'https://ossgw.alicdn.com/tmall-c3/tmx/9d958a4e0d7f084d6b8f64e487654fdb.gltf'\n}).then(function (model) {\n    model.node.y = 0.2;\n    model.node.setScale(0.0015);\n    model.materials.map(function (m) {\n        m.side = Hilo3d.constants.FRONT_AND_BACK;\n    });\n    model.node.onUpdate = function(){\n        this.rotationY += 1;\n    };\n    stage.addChild(model.node);\n});\nvar plane = new Hilo3d.Mesh({\n    y: -.4,\n    rotationX: -90,\n    geometry: new Hilo3d.PlaneGeometry(),\n    material: new Hilo3d.BasicMaterial({\n        lightType:'LAMBERT',\n        side: Hilo3d.constants.FRONT_AND_BACK,\n        diffuse:new Hilo3d.Color(.612, .612, .612)\n    })\n});\nplane.setScale(1.8);\nstage.addChild(plane);\n\nvar time = 0;\npostProcess.init(renderer);\npostProcess.addPass({\n    frag:'\\n\\\n    precision HILO_MAX_FRAGMENT_PRECISION float;\\n\\\n    varying vec2 v_texcoord0;\\n\\\n    uniform sampler2D u_diffuse;\\n\\\n    void main(void) {\\n\\\n        vec4 color = texture2D(u_diffuse, v_texcoord0);\\n\\\n        gl_FragColor = vec4(color.r * 0.3 + color.g * 0.59 + color.b * 0.11);\\n\\\n    }',\n    uniforms:{\n        u_r:{\n            get:function(){\n                return time;\n            }\n        }\n    }\n});\n\nvar currentKernel = 'edgeDetect6';\nvar kernelPass = postProcess.addKernelPass(postProcess.kernels[currentKernel]);\n\nrenderer.on('afterRender', ()=>{\n    time += 0.016;\n    postProcess.render();\n});\n\nvar kernelSelect = document.getElementById('kernelSelect');\nfor (var name in postProcess.kernels) {\n    var opt = document.createElement('option');\n    opt.innerText = name;\n    opt.setAttribute('value', name);\n    kernelSelect.appendChild(opt);\n}\n\nkernelSelect.value = currentKernel;\nkernelSelect.addEventListener('change', function () {\n    kernelPass.kernel = postProcess.kernels[kernelSelect.value];\n});"}}]);