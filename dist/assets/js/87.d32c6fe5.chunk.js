(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{522:function(e,n,r){"use strict";r.r(n),n.default="renderer.clearColor = new Hilo3d.Color(0, 0, 0, 1);\nvar container = new Hilo3d.Node();\nvar geometry = new Hilo3d.SphereGeometry({\n    radius: 1,\n    heightSegments: 32,\n    widthSegments: 64,\n})\nvar mesh = new Hilo3d.Mesh({\n    rotationX:90,\n    time:0,\n    geometry: geometry,\n    material: new Hilo3d.ShaderMaterial({\n        shaderCacheId: \"UVAnimation\",\n        getCustomRenderOption(option){\n            option.CUSTOM_OPTION = 1;\n            return option;\n        },\n        needBasicUnifroms: false,\n        needBasicAttributes: false,\n        diffuse: new Hilo3d.LazyTexture({\n            crossOrigin: true,\n            src: '//gw.alicdn.com/tfs/TB1Q8dQSVXXXXciXVXXXXXXXXXX-512-512.jpg'\n        }),\n        mixTexture:new Hilo3d.LazyTexture({\n            crossOrigin: true,\n            src: '//gw.alicdn.com/tfs/TB1T1wEizTpK1RjSZKPXXa3UpXa-512-512.png'\n        }),\n        uniforms:{\n            u_diffuse:'DIFFUSE',\n            u_modelViewProjectionMatrix:'MODELVIEWPROJECTION',\n            u_mixTexture:{\n                get(mesh, material, programInfo) {\n                    return Hilo3d.semantic.handlerTexture(material.mixTexture, programInfo.textureIndex);\n                }\n            },\n            u_time:{\n                get:function(mesh, material, programInfo){\n                    return mesh.time;\n                }\n            },\n            'u_light.color.b':{\n                get:function(){\n                    return Math.random() - .5;\n                }\n            }\n        },\n        attributes:{\n            a_position: 'POSITION',\n            a_texcoord0:'TEXCOORD_0'\n        },\n        fs:`\n            precision HILO_MAX_FRAGMENT_PRECISION float;\n            varying vec2 v_texcoord0;\n            uniform sampler2D u_diffuse;\n            uniform sampler2D u_mixTexture;\n            uniform float u_time;\n            \n            struct color{\n                float r;\n                float g;\n                float b;\n            };\n\n            struct light{\n                color color;\n            };\n            \n            uniform light u_light;\n            void main(void) {\n                float uOffset = sin(u_time * 0.0005);\n                float vOffset = cos(u_time * 0.0003);\n                vec4 diffuse = texture2D(u_diffuse, vec2(v_texcoord0.x + uOffset, v_texcoord0.y + vOffset));    \n                vec4 mixTexture = texture2D(u_mixTexture, v_texcoord0);    \n                gl_FragColor = mix(vec4(diffuse.r, diffuse.g, u_light.color.b, 1), mixTexture, 0.05);\n            }\n        `,\n        vs:`\n            precision HILO_MAX_VERTEX_PRECISION float;\n            attribute vec3 a_position;\n            attribute vec2 a_texcoord0;\n            uniform mat4 u_modelViewProjectionMatrix;\n            varying vec2 v_texcoord0;\n\n            void main(void) {\n                vec4 pos = vec4(a_position, 1.0);\n                gl_Position = u_modelViewProjectionMatrix * pos;\n                v_texcoord0 = a_texcoord0;\n            }\n        `\n    }),\n    onUpdate(dt){\n        this.time += dt;\n    }\n});\n\ncontainer.addChild(mesh);\nstage.addChild(container);\n\n// stage.renderer.initContext();\n// var material = mesh.material;\n\n// // \u7f16\u8bd1\n// var shader = Hilo3d.Shader.getCustomShader(material.vs, material.fs, '', material.shaderCacheId);\n// shader.alwaysUse = true;\n// var program = Hilo3d.Program.getProgram(, Hilo3d.Shader.renderer.state);\n// program.alwaysUse = true;\n\n// // \u5220\u9664\n// var shader = Hilo3d.Shader.cache.get(material.shaderCacheId);\n// var program = Hilo3d.Program.cache.get(shader.id);\n// shader.destroy();\n// program.destroy();"}}]);