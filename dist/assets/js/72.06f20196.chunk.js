(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{507:function(e,n,r){"use strict";r.r(n),n.default="renderer.on('init', function() {\n    console.log('init');\n    scale = 8;\n    width = Math.floor(innerWidth / scale);\n    height = Math.floor(innerHeight / scale)\n    totalTile = width * height;\n    lifegameData = new Uint8Array(totalTile * 4);\n    for (var i = 0; i < totalTile; i++) {\n        lifegameData[i * 4 + 2] = Math.random() < 0.6 ? 255 : 0;\n    }\n\n    lifegameFramebuffer = new Hilo3d.Framebuffer(renderer, {\n        needRenderbuffer: false,\n        width: width,\n        height: height,\n        data: lifegameData\n    });\n\n    lifegameFramebuffer.bind();\n    lifegameFramebuffer.backTexture = lifegameFramebuffer.texture;\n    lifegameFramebuffer.frontTexture = lifegameFramebuffer.createTexture();\n    lifegameFramebuffer.unbind();\n});\n\npostProcess.init(renderer);\nrenderer.on('afterRender', function() {\n    lifegameFramebuffer.bind();\n    lifegameFramebuffer.texture = lifegameFramebuffer.backTexture;\n    renderer.gl.framebufferTexture2D(renderer.gl.FRAMEBUFFER, lifegameFramebuffer.attachment, lifegameFramebuffer.target, lifegameFramebuffer.texture.getGLTexture(renderer.state), 0);\n\n    postProcess.draw(lifegameFramebuffer.frontTexture, {\n        uniforms: {\n            u_size: new Float32Array([width, height])\n        },\n        frag: `\n            precision HILO_MAX_FRAGMENT_PRECISION float;\n            varying vec2 v_texcoord0;\n            uniform sampler2D u_diffuse;\n            uniform vec2 u_size;\n            int get(int x, int y) {\n                return int(texture2D(u_diffuse, (gl_FragCoord.xy + vec2(x, y)) / u_size).b);\n            }\n\n            void main(void) {\n                int sum = get(-1, -1) +\n                      get(-1,  0) +\n                      get(-1,  1) +\n                      get( 0, -1) +\n                      get( 0,  1) +\n                      get( 1, -1) +\n                      get( 1,  0) +\n                      get( 1,  1);\n\n                if (sum == 3) {\n                    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n                } else if (sum == 2) {\n                    float current = float(get(0, 0));\n                    gl_FragColor = vec4(current, current, current, 1.0);\n                } else {\n                    gl_FragColor = vec4(.0, .0, .0, .0);\n                }\n            }\n        `\n    });\n\n    var temp = lifegameFramebuffer.backTexture;\n    lifegameFramebuffer.backTexture = lifegameFramebuffer.frontTexture;\n    lifegameFramebuffer.frontTexture = temp;\n\n    lifegameFramebuffer.unbind()\n    lifegameFramebuffer.render();\n});\n\ndocument.addEventListener('click', function(e) {\n    var x = Math.floor(e.offsetX / scale);\n    var y = Math.floor(height - e.offsetY / scale);\n    x = Math.min(width - 1, x);\n    y = Math.min(height - 1, y);\n\n    gl.bindTexture(gl.TEXTURE_2D, lifegameFramebuffer.frontTexture.getGLTexture(renderer.state));\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, x, y, 1, 1,\n        gl.RGBA, gl.UNSIGNED_BYTE,\n        new Uint8Array([255, 255, 255, 255]));\n    gl.bindTexture(gl.TEXTURE_2D, lifegameFramebuffer.backTexture.getGLTexture(renderer.state));\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, x, y, 1, 1,\n        gl.RGBA, gl.UNSIGNED_BYTE,\n        new Uint8Array([255, 255, 255, 255]));\n});\n\nticker._targetFPS = 24;\nticker._interval = 1000 / ticker._targetFPS;"}}]);